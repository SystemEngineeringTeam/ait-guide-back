version: "3"
services:
  mysql:
    container_name: ${MYSQL_CONTAINER_NAME}
    image: mysql:8
    volumes:
      - ./docker/mysql/mysqld_charset.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASS}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_TCP_PORT: ${MYSQL_PORT}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 5

  neo4j:
    container_name: ${NEO4J_CONTAINER_NAME}
    build:
      context: .
      dockerfile: ./docker/neo4j/dockerfile
    restart: always
    ports:
      - ${NEO4J_PORT_1}:7474
      - ${NEO4J_PORT_2}:7687
    volumes:
      - ./docker/neo4j/volumes/data:/data
      - ./docker/neo4j/volumes/logs:/logs
      - ./docker/neo4j/volumes/conf:/conf
      - ./data:/import
      - ./docker/neo4j/volumes/script:/script
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}
      - EXTENSION_SCRIPT=/script/import_data.sh
      - NEO4J_PLUGINS=["graph-data-science"]
    healthcheck:
      test: "curl -f http://localhost:7474 || exit 1"
      timeout: 10s
      retries: 5
      start_period: 20s

  api:
      container_name: ${API_CONTAINER_NAME}
      build:
        context: .
        dockerfile: ./docker/api/dockerfile
      stdin_open: true
      tty: true
      volumes:
        - ./log:/root/log
      environment:
        - GIN_MODE=release
      ports:
        - ${API_PORT}:8080
      depends_on:
        mysql:
          condition: service_healthy
        neo4j:
          condition: service_healthy